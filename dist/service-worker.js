import{D as n,S as a}from"./assets/js/types.js";const c="focusForgeAlarm";async function u(){return(await chrome.storage.local.get(a.TIMER_DATA))[a.TIMER_DATA]||{state:"IDLE",endTime:0}}async function l(r){await chrome.storage.local.set({[a.TIMER_DATA]:r});const i={type:"TIMER_UPDATED",data:r};chrome.runtime.sendMessage(i);const s=await chrome.tabs.query({});for(const e of s)if(e.id)try{await chrome.tabs.sendMessage(e.id,i)}catch{}}async function T(r){await chrome.alarms.clear(c);const i=(await chrome.storage.local.get(a.SETTINGS))[a.SETTINGS]||n,s=r==="FOCUSING"?i.focusDuration:i.breakDuration,e=Date.now()+s*60*1e3;await chrome.alarms.create(c,{delayInMinutes:s}),await l({state:r,endTime:e})}async function h(){await chrome.alarms.clear(c),await l({state:"IDLE",endTime:0})}chrome.runtime.onInstalled.addListener(async()=>{await chrome.storage.local.set({[a.SETTINGS]:n,[a.TIMER_DATA]:{state:"IDLE",endTime:0},[a.CYCLE_COUNT]:0})});chrome.alarms.onAlarm.addListener(async r=>{if(r.name===c){const{state:i}=await u();if(i==="FOCUSING"){try{const[t]=await chrome.tabs.query({active:!0,currentWindow:!0});t&&t.id&&t.url&&!t.url.startsWith("chrome://")&&await chrome.scripting.executeScript({target:{tabId:t.id},files:["fireworks-script.js"]})}catch(t){console.error("Failed to inject fireworks script:",t)}const s=(await chrome.storage.local.get(a.SETTINGS))[a.SETTINGS]||n,o=((await chrome.storage.local.get(a.CYCLE_COUNT))[a.CYCLE_COUNT]||0)+1,m=await chrome.tabs.query({url:["http://*/*","https://*/*"]});if(o>=s.blueScreenCycles){await chrome.storage.local.set({[a.CYCLE_COUNT]:0}),await l({state:"BSOD",endTime:0});for(const t of m)t.id&&(await chrome.scripting.insertCSS({target:{tabId:t.id},files:["assets/blue-screen.css"]}),await chrome.scripting.executeScript({target:{tabId:t.id},files:["blue-screen-script.js"]}))}else{await chrome.storage.local.set({[a.CYCLE_COUNT]:o}),await T("BREAKING");for(const t of m)t.id&&t.url&&!t.url.startsWith("chrome://")&&!t.url.startsWith("https://chrome.google.com/webstore")&&(await chrome.scripting.insertCSS({target:{tabId:t.id},files:["assets/overlay.css"]}),await chrome.scripting.executeScript({target:{tabId:t.id},files:["content-script.js"]}))}}else if(i==="BREAKING"){await h();const s=await chrome.tabs.query({url:["http://*/*","https://*/*"]});for(const e of s)e.id&&e.url&&!e.url.startsWith("chrome://")&&!e.url.startsWith("https://chrome.google.com/webstore")&&(await chrome.scripting.removeCSS({target:{tabId:e.id},files:["assets/overlay.css"]}),await chrome.scripting.executeScript({target:{tabId:e.id},files:["restore-original.js"]}))}}});chrome.runtime.onMessage.addListener((r,i,s)=>{if(r.command==="START_TIMER")return T("FOCUSING").then(()=>s({success:!0})),!0;if(r.command==="STOP_TIMER")return h().then(()=>s({success:!0})),!0;if(r.command==="GET_TIMER_DATA")return u().then(e=>s(e)),!0});
