import{D as m,S as r}from"./assets/js/types.js";const n="focusForgeAlarm";async function u(){return(await chrome.storage.local.get(r.TIMER_DATA))[r.TIMER_DATA]||{state:"IDLE",endTime:0}}async function T(e){await chrome.storage.local.set({[r.TIMER_DATA]:e});const i={type:"TIMER_UPDATED",data:e};chrome.runtime.sendMessage(i);const s=await chrome.tabs.query({});for(const a of s)if(a.id)try{await chrome.tabs.sendMessage(a.id,i)}catch{}}function l(e,i){chrome.notifications.create({type:"basic",iconUrl:"assets/icons/icon128.png",title:e,message:i})}async function h(e){await chrome.alarms.clear(n);const i=(await chrome.storage.local.get(r.SETTINGS))[r.SETTINGS]||m,s=e==="FOCUSING"?i.focusDuration:i.breakDuration,a=Date.now()+s*60*1e3;await chrome.alarms.create(n,{delayInMinutes:s}),await T({state:e,endTime:a});const c=e==="FOCUSING"?"Focus Time Started":"Break Time Started",o=`Your ${e==="FOCUSING"?"focus":"break"} session will end in ${s} minutes.`;l(c,o)}async function d(){await chrome.alarms.clear(n),await T({state:"IDLE",endTime:0})}chrome.runtime.onInstalled.addListener(async()=>{await chrome.storage.local.set({[r.SETTINGS]:m,[r.TIMER_DATA]:{state:"IDLE",endTime:0},[r.CYCLE_COUNT]:0})});chrome.alarms.onAlarm.addListener(async e=>{if(e.name===n){const{state:i}=await u();if(i==="FOCUSING"){try{const[t]=await chrome.tabs.query({active:!0,currentWindow:!0});t&&t.id&&t.url&&!t.url.startsWith("chrome://")&&await chrome.scripting.executeScript({target:{tabId:t.id},files:["fireworks-script.js"]})}catch(t){console.error("Failed to inject fireworks script:",t)}const s=(await chrome.storage.local.get(r.SETTINGS))[r.SETTINGS]||m,c=((await chrome.storage.local.get(r.CYCLE_COUNT))[r.CYCLE_COUNT]||0)+1,o=await chrome.tabs.query({url:["http://*/*","https://*/*"]});if(c>=s.blueScreenCycles){await chrome.storage.local.set({[r.CYCLE_COUNT]:0}),await T({state:"BSOD",endTime:0});for(const t of o)t.id&&(await chrome.scripting.insertCSS({target:{tabId:t.id},files:["assets/blue-screen.css"]}),await chrome.scripting.executeScript({target:{tabId:t.id},files:["blue-screen-script.js"]}))}else{await chrome.storage.local.set({[r.CYCLE_COUNT]:c}),await h("BREAKING");for(const t of o)t.id&&t.url&&!t.url.startsWith("chrome://")&&!t.url.startsWith("https://chrome.google.com/webstore")&&(await chrome.scripting.insertCSS({target:{tabId:t.id},files:["assets/overlay.css"]}),await chrome.scripting.executeScript({target:{tabId:t.id},files:["content-script.js"]}))}l("Focus Time Ended","Time to take a break!")}else if(i==="BREAKING"){l("Break Time Ended","Time to get back to work!"),await d();const s=await chrome.tabs.query({url:["http://*/*","https://*/*"]});for(const a of s)a.id&&a.url&&!a.url.startsWith("chrome://")&&!a.url.startsWith("https://chrome.google.com/webstore")&&(await chrome.scripting.removeCSS({target:{tabId:a.id},files:["assets/overlay.css"]}),await chrome.scripting.executeScript({target:{tabId:a.id},files:["restore-original.js"]}))}}});chrome.runtime.onMessage.addListener((e,i,s)=>{if(e.command==="START_TIMER")return h("FOCUSING").then(()=>s({success:!0})),!0;if(e.command==="STOP_TIMER")return d().then(()=>s({success:!0})),!0;if(e.command==="GET_TIMER_DATA")return u().then(a=>s(a)),!0});
